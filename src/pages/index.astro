---
import type { ImageMetadata } from 'astro';
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import { SITE_TITLE, SITE_DESCRIPTION, HOMEPAGE_URL1 } from '../config'
import Body from '../components/Body.astro'
import Content from '../components/Content.astro'
import { IoArrowForward } from 'react-icons/io5'
import Masthead from '../components/Masthead.astro'
import { Image } from 'astro:assets';
import CreatedWithSection from '../components/CreatedWithSection.astro'

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}');
console.log('images:', images)

const posts = (await Astro.glob('./posts/*.md')).sort(
  (a: any, b: any) =>
    new Date(b.frontmatter.createdAt).valueOf() -
    new Date(a.frontmatter.createdAt).valueOf()
)
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Body>
    <Header title={SITE_TITLE} />
    <main class="pt-[56px]">
      <Masthead />
      <Content>
        <h1 class="text-3xl p-2 font-bold"></h1>
        <section>
          <p class="mb-8 indent-4">
            
            " I help businesses like yours extract critical data (leads, pricing, inventory) from websites—even with CAPTCHAs or rate limits. My systems use Puppeteer, proxy networks, and AI solvers to run millions of requests flawlessly. Here’s how it helps you:

For E-commerce: Automatically track competitors’ prices without manual scraping.

For Artists/Galleries: Scrape collector leads from directories 24/7.

For Marketers: Build targeted prospect lists from LinkedIn, avoiding blocks.

*Every solution is custom-tuned for your targets and scale. Below are real-world automations I’ve built—each saving clients 10+ hours/week.*"
 My systems use Puppeteer
            <a
              class="inline-flex items-center gap-1 indent-1 text-green-500"
              href={HOMEPAGE_URL1}
              > Puppeteer
            </a>
            , proxy networks, and AI solvers..
          </p>
        </section>
        <section>
          <ul class="grid grid-cols-1 md:grid-cols-2 gap-4">
            {
              posts.map(post => {
                const heroImageAsset = images[post.frontmatter.heroImage]
                const heroImageSrc =  heroImageAsset ? heroImageAsset() : post.frontmatter.heroImage
                return (
                <li class="text-center mb-4">
                  <a href={post.url}>
                    <Image
                      class="border border-slate-300 dark:border-zinc-700 rounded-xl"
                      src={heroImageSrc}
                      width={720}
                      height={720 / 1.777}
                      alt="Thumbnail"
                    />
                    <div class="mt-3 text-xl font-bold">
                      {post.frontmatter.title}
                    </div>
                    {post.frontmatter.description && (
                      <div class="opacity-70">
                        {post.frontmatter.description}
                      </div>
                    )}
                  </a>
                </li>
              )
              })
            }
          </ul>
        </section>
        <CreatedWithSection />
      </Content>
    </main>
    <Footer />
  </Body>
</html>
